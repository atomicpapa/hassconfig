---
# This is based heavily on, if not a complete ripoff of, Phil Hawthorne's article
# "Making Home Assistantâ€™s Presence Detection not so Binary" from his website:
# https://philhawthorne.com/making-home-assistants-presence-detection-not-so-binary/

# Thanks Phil!!

# Input Selects for each family member to be tracked giving all available options for presence

input_select:
  glenn_status_dropdown:
    name: Glenn
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
    initial: Home

  eryin_status_dropdown:
    name: Eryin
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
    initial: Home

  emmy_status_dropdown:
    name: Emmy
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
    initial: Home

  lola_status_dropdown:
    name: Lola
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
    initial: Home

# Sensors that will actually represent the person

sensor:
  - platform: template
    sensors:
      glenn_status:
        value_template: '{{ states.input_select.glenn_status_dropdown.state }}'
        friendly_name: 'Glenn'
      eryin_status:
        value_template: '{{ states.input_select.eryin_status_dropdown.state }}'
        friendly_name: 'Eryin'
      emmy_status:
        value_template: '{{ states.input_select.emmy_status_dropdown.state }}'
        friendly_name: 'Emmy'
      lola_status:
        value_template: '{{ states.input_select.lola_status_dropdown.state }}'
        friendly_name: 'Lola'

automation:

  - alias: Mark person as just arrived
    trigger:
      - platform: state
        entity_id: person.glenn
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.eryin
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.emmy
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.lola
        from: 'not_home'
        to: 'home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'person.glenn' %}
              input_select.glenn_status_dropdown
            {% elif trigger.entity_id == 'person.eryin' %}
              input_select.eryin_status_dropdown
            {% elif trigger.entity_id == 'person.emmy' %}
              input_select.emmy_status_dropdown
            {% else %}
              input_select.lola_status_dropdown
            {% endif %}
          option: >
            {% if trigger.entity_id == 'person.glenn' %}
              {% if states.input_select.glenn_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% elif trigger.entity_id == 'person.eryin' %}
              {% if states.input_select.eryin_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% elif trigger.entity_id == 'person.emmy' %}
              {% if states.input_select.emmy_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% else %}
              {% if states.input_select.lola_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% endif %}

  - alias: Mark person as home
    trigger:
      - platform: state
        entity_id: input_select.glenn_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.eryin_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.emmy_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.lola_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.glenn_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
      - platform: state
        entity_id: input_select.eryin_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
      - platform: state
        entity_id: input_select.emmy_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
      - platform: state
        entity_id: input_select.lola_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.glenn_status_dropdown' %}
              input_select.glenn_status_dropdown
            {% elif trigger.entity_id == 'input_select.eryin_status_dropdown' %}
              input_select.eryin_status_dropdown
            {% elif trigger.entity_id == 'input_select.emmy_status_dropdown' %}
              input_select.emmy_status_dropdown
            {% else %}
              input_select.lola_status_dropdown
            {% endif %}
          option: Home

  - alias: Mark person as just left
    trigger:
      - platform: state
        entity_id: person.glenn
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.eryin
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.emmy
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.lola
        from: 'not_home'
        to: 'home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'person.glenn' %}
              input_select.glenn_status_dropdown
            {% elif trigger.entity_id == 'person.eryin' %}
              input_select.eryin_status_dropdown
            {% elif trigger.entity_id == 'person.emmy' %}
              input_select.emmy_status_dropdown
            {% else %}
              input_select.lola_status_dropdown
            {% endif %}
          option: Just Left

  - alias: Mark person as away
    trigger:
      - platform: state
        entity_id: person.glenn
        to: 'Just Left'
        for:
          minutes: 10
      - platform: state
        entity_id: person.eryin
        to: 'Just Left'
        for:
          minutes: 10
      - platform: state
        entity_id: person.emmy
        to: 'Just Left'
        for:
          minutes: 10
      - platform: state
        entity_id: person.lola
        to: 'Just Left'
        for:
          minutes: 10
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'person.glenn' %}
              input_select.glenn_status_dropdown
            {% elif trigger.entity_id == 'person.eryin' %}
              input_select.eryin_status_dropdown
            {% elif trigger.entity_id == 'person.emmy' %}
              input_select.emmy_status_dropdown
            {% else %}
              input_select.lola_status_dropdown
            {% endif %}
          option: Away

  - alias: Mark person as extended away
    trigger:
      - platform: state
        entity_id: input_select.glenn_status_dropdown
        to: 'Away'
        for:
          hours: 24
      - platform: state
        entity_id: input_select.eryin_status_dropdown
        to: 'Away'
        for:
          hours: 24
      - platform: state
        entity_id: input_select.emmy_status_dropdown
        to: 'Away'
        for:
          hours: 24
      - platform: state
        entity_id: input_select.lola_status_dropdown
        to: 'Away'
        for:
          hours: 24
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.phil_status_dropdown' %}
              input_select.glenn_status_dropdown
            {% elif trigger.entity_id == 'input_select.eryin_status_dropdown' %}
              input_select.eryin_status_dropdown
            {% elif trigger.entity_id == 'input_select.emmy_status_dropdown' %}
              input_select.emmy_status_dropdown
            {% else %}
              input_select.lola_status_dropdown
            {% endif %}
          option: Extended Away

  # - alias: 'Girls After School Greeting'
  #
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         - person.emmy
  #         - person.lola
  #       to: 'home'
  #
  #   condition:
  #     condition: or
  #     conditions:
  #       - condition: and
  #         conditions:
  #           - condition: state
  #             entity_id: input_boolean.school_mode
  #             state: 'on'
  #           - condition: time
  #             after: '15:00:00'
  #             before: '18:00:00'
  #
  #   action:
  #     - service: notify.mobile_app_emmy_s_phone
  #       data:
  #         title: "Responsibilities"
  #         message: "Cat Boxes, Dining Room, Bathroom"
  #     - service: notify.mobile_app_lolas_phone
  #       data:
  #         title: "Responsibilities"
  #         message: "Bathroom, Living Room, Cat Box"
  #     - wait_template: "{{ states.binary_sensor.front_door.state == 'on' }}"
  #       timeout: 00:05:00
  #     - service: script.speech_engine
  #       data_template:
  #         personarriving: >
  #           {% set person = trigger.entity_id.split('.')[1].split('_')[0] %}
  #           {%- macro greeting_sentence(person) -%}
  #           {{ [
  #           "Welcome back home " ~ person + "I hope you had a great day at school!",
  #           "Hi" ~ person + "welcome home!"
  #           ] | random }}
  #           {%- endmacro -%}
  #           "{{greeting_sentence(person)}}"
  #         call_responsibilities: 1


  ######################################################################
  ##  Announce when people come or go.
  ## Announce over all Google Homes and Minis
  ######################################################################
  - alias: 'Welcome Home'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
          - sensor.glenn_status
          - sensor.eryin_status
          - sensor.emmy_status
          - sensor.lola_status
        to: 'Just Arrived'
        for:
          seconds: 30

    action:
      - wait_template: "{{ states.binary_sensor.front_door.state == 'on' }}"
        timeout: 00:04:00
        continue_on_timeout: 'true'
      - service: script.speech_engine
        data_template: >-
          {% if states.sensor.glenn_status.state == 'Just Arrived' and states.sensor.eryin_status.state == 'Just Arrived' and states.sensor.emmy_status.state != 'Just Arrived' and states.sensor.lola_status.state != 'Just Arrived' %}
            call_glenn_eryin_welcome: 1
            call_inside_weather: 1
            call_family_calendar: 1
          {% elif states.sensor.emmy_status.state =='Just Arrived' and states.sensor.lola_status.state == 'Just Arrived' and states.sensor.glenn_status.state != 'Just Arrived' and states.sensor.eryin_status.state != 'Just Arrived' %}
            call_emmy_lola_welcome: 1
            {% if states.input_boolean.school_mode.state == 'on' and now().hour > 14 and now().hour < 18 %}
            call_responsibilities: 1
            {% endif %}
          {% elif states.sensor.glenn_status.state == 'Just Arrived' and states.sensor.eryin_status.state != 'Just Arrived' and states.sensor.emmy_status.state != 'Just Arrived' and states.sensor.lola_status.state != 'Just Arrived' %}
            call_glenn_welcome: 1
            call_family_calendar: 1
          {% elif states.sensor.glenn_status.state != 'Just Arrived' and states.sensor.eryin_status.state == 'Just Arrived' and states.sensor.emmy_status.state != 'Just Arrived' and states.sensor.lola_status.state != 'Just Arrived' %}
            call_eryin_welcome: 1
            call_family_calendar: 1
          {% elif states.sensor.glenn_status.state != 'Just Arrived' and states.sensor.eryin_status.state != 'Just Arrived' and states.sensor.emmy_status.state == 'Just Arrived' and states.sensor.lola_status.state != 'Just Arrived' %}
            call_emmy_welcome: 1
            {% if states.input_boolean.school_mode.state == 'on' and now().hour > 13 and now().hour < 18 %}
            call_emmy_responsibilities: 1
            {% endif %}
          {% elif states.sensor.glenn_status.state != 'Just Arrived' and states.sensor.eryin_status.state != 'Just Arrived' and states.sensor.emmy_status.state != 'Just Arrived' and states.sensor.lola_status.state == 'Just Arrived' %}
            call_lola_welcome: 1
            {% if states.input_boolean.school_mode.state == 'on' and now().hour > 13 and now().hour < 18 %}
            call_lola_responsibilities: 1
            {% endif %}
          {% else %}
            call_family_welcome: 1
            {% if states.input_boolean.school_mode.state == 'on' and now().hour > 13 and now().hour < 18 %}
            call_responsibilities: 1
            {% endif %}
          {% endif %}
